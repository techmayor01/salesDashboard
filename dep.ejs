<!DOCTYPE html>
<html lang="en">
  <%- include('../partials/head') %>
  <body class="bg-slate-200 text-sm">
    <div class="relative flex flex-col min-h-screen bg-slate-200">
      <%- include ('../partials/header') %>

      <div class="flex flex-row">
        <div class="lg:w-[220px] lg:p-4">
          <%- include ('../partials/sidebar') %>
        </div>
        <form action="/addReceiveStock" method="post">
        <main
          class="relative top-16 p-4 overflow-auto lg:w-[calc(100%-220px)] w-full bg-slate-200" style="width: 100%;">
          <h2 class="text-2xl font-bold text-gray-800 mb-4" >Add Receive Stock</h2>

          <!-- Invoice Form -->
          <div class="bg-white rounded-xl shadow p-6 mb-6" >
              <!-- Left Column -->
              <div class="flex flex-col gap-4">
                <!-- Supplier -->
              <div>
                <label class="block font-medium text-gray-700 mb-1">Select Supplier <span class="text-red-500">*</span></label>
                
                <% if (suppliers && suppliers.length > 0) { %>
                  <select name="supplier" class="w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-300 px-3 py-2">
                    <option value="">Select Supplier</option>
                    <% suppliers.forEach(supplier => { %>
                      <option value="<%= supplier._id %>"><%= supplier.supplier %></option>
                    <% }) %>
                  </select>
                <% } else { %>
                  <p class="text-red-500">No suppliers available.</p>
                <% } %>
              </div>

              <!-- Branch -->
              <div>
                <label class="block font-medium text-gray-700 mb-1">Branch <span class="text-red-500">*</span></label>
                
                <% if (branches && branches.length > 0) { %>
                  <select name="branch" class="w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-300 px-3 py-2">
                    <option value="">Select Branch</option>
                    <% branches.forEach(branch => { %>
                      <option value="<%= branch._id %>"><%= branch.branch_name %></option>
                    <% }) %>
                  </select>
                <% } else { %>
                  <p class="text-red-500">No branches available.</p>
                <% } %>
              </div>


                <!-- Date -->
                <div>
                  <label class="block font-medium text-gray-700 mb-1">Date <span class="text-red-500">*</span></label>
                  <input type="date" name="payment_date" class="w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-300 px-3 py-2" />
                </div>
              </div>
           
            </div>
            
            <!-- Invoice Table -->
            <div class="bg-white rounded-xl shadow p-6 overflow-x-auto">
              <table class="min-w-full border text-sm text-gray-700">
                <thead class="bg-gray-50 font-medium">
                  <tr>
                    <th class="p-3 border">Item Info <span class="text-red-500">*</span></th>
                    <th class="p-3 border">Unit <span class="text-red-500">*</span></th>
                    <th class="p-3 border">Qty <span class="text-red-500">*</span></th>
                    <th class="p-3 border">Rate <span class="text-red-500">*</span></th>
                    <th class="p-3 border">Total</th>
                    <th class="p-3 border text-center">Action</th>
                  </tr>
                </thead>
                <tbody id="itemTableBody">
                  <!-- Initial row -->
                <tr class="hover:bg-gray-50 item-row">
                  <td class="p-2 border">
                    <input type="text" placeholder="Item Name" name="item_name[]" class="w-full border rounded px-2 py-1 item-name" />
                  </td>
                  <td class="p-2 border">
                    <select name="unitCode[]" class="w-full border rounded px-2 py-1 text-sm text-gray-700">
                      <option value="ctns">Ctns</option>
                      <option value="schts">Schts</option>
                      <option value="rolls">Rolls</option>
                      <option value="pkts">Pkts</option>
                      <option value="pcs">Pcs</option>
                      <option value="cs">Cs</option>
                      <option value="dz">Dz</option>
                    </select>
                  </td>
                  <td class="p-2 border">
                    <input type="number" name="item_qty[]" class="w-full border rounded px-2 py-1 item-qty" />
                  </td>
                  <td class="p-2 border">
                    <input type="number" name="item_rate[]" class="w-full border rounded px-2 py-1 item-rate" />
                  </td>
                  <td class="p-2 border">
                    <input type="text" value="" class="w-full border bg-gray-100 rounded px-2 py-1 item-total" readonly />
                  </td>
                  <td class="p-2 border text-center">
                    <button class="bg-red-500 hover:bg-red-600 text-white rounded px-3 py-1 delete-row">Delete</button>
                  </td>
                </tr>
              </tbody>
              
              <!-- Footer -->
              <tfoot>
                <!-- Grand Total -->
                <tr>
                  <td></td>
                  <td></td>
                  <td colspan="3" class="p-2 text-right font-medium">Grand Total:</td>
                  <td class="p-2 ">
                    <input id="grandTotal" type="number" name="grand_total" value="0.00" class="w-full border rounded px-2 py-1" readonly />
                  </td>
                </tr>
              
                <!-- Paid -->
                <tr>
                  <td></td>
                  <td></td>
                  <td></td>
                  <td colspan="2" class="p-2 text-right font-medium">Paid Amount:</td>
                  <td class="p-2 ">
                    <input type="number" name="paid_amount" value="0.00" class="w-full border rounded px-2 py-1" />
                  </td>
                  
                </tr>
                
                <!-- Submit & Due -->
                <tr>
                  <td></td>
                  <td></td>
                  <td></td>
                  <td></td>
                  <td></td>
                  <td class="p-2">
                    <div class="flex justify-center gap-4">
                      <button type="submit" name="payment_status" value="paid_half" class="bg-green-500 hover:bg-green-600 text-white rounded px-4 py-1">Submit</button>
                    </div>
                  </td>
                  
                 
                </tr>
              </tfoot>
            </table>
            <script>
              document.addEventListener("DOMContentLoaded", function () {
                const tableBody = document.getElementById("itemTableBody");
            
                // Function to calculate total for a row
                function calculateRowTotal(row) {
                  const qty = parseFloat(row.querySelector(".item-qty").value) || 0;
                  const rate = parseFloat(row.querySelector(".item-rate").value) || 0;
                  row.querySelector(".item-total").value = (qty * rate).toFixed(2);
                  calculateGrandTotal();
                }
            
                // Function to calculate grand total
                function calculateGrandTotal() {
                  let total = 0;
                  document.querySelectorAll(".item-total").forEach((input) => {
                    total += parseFloat(input.value) || 0;
                  });
                  document.getElementById("grandTotal").value = total.toFixed(2);
                }
            
                // Function to create a new row
                function createNewRow() {
                  const newRow = document.createElement("tr");
                  newRow.className = "hover:bg-gray-50 item-row";
                  newRow.innerHTML = `
                      <td class="p-2 border">
                        <input type="text" placeholder="Item Name" name="item_name[]" class="w-full border rounded px-2 py-1 item-name" />
                      </td>
                      <td class="p-2 border border-gray-200">
                        <select name="unitCode[]" class="w-full border rounded px-2 py-1 text-sm text-gray-700">
                          <option value="ctns">Ctns</option>
                          <option value="schts">Schts</option>
                          <option value="rolls">Rolls</option>
                          <option value="pkts">Pkts</option>
                          <option value="pcs">Pcs</option>
                          <option value="cs">Cs</option>
                          <option value="dz">Dz</option>
                        </select>
                      </td>
                      <td class="p-2 border">
                        <input type="number" name="item_qty[]" class="w-full border rounded px-2 py-1 item-qty" />
                      </td>
                      <td class="p-2 border">
                        <input type="number" name="item_rate[]" class="w-full border rounded px-2 py-1 item-rate" />
                      </td>
                      <td class="p-2 border">
                        <input type="text" value="0.00" class="w-full border bg-gray-100 rounded px-2 py-1 item-total" readonly />
                      </td>
                      <td class="p-2 border text-center">
                        <button type="button" class="bg-red-500 hover:bg-red-600 text-white rounded px-3 py-1 delete-row">Delete</button>
                      </td>
                    `;
        
                  tableBody.appendChild(newRow);
                  attachEventListeners(newRow);
                }
            
                // Attach event listeners to a row
                function attachEventListeners(row) {
                  const qtyInput = row.querySelector(".item-qty");
                  const rateInput = row.querySelector(".item-rate");
            
                  // Update total on input
                  qtyInput.addEventListener("input", () => calculateRowTotal(row));
                  rateInput.addEventListener("input", () => {
                    calculateRowTotal(row);
            
                    // Check if all inputs are valid before adding new row
                    const name = row.querySelector(".item-name").value.trim();
                    const qty = parseFloat(qtyInput.value);
                    const rate = parseFloat(rateInput.value);
                    if (name !== "" && qty > 0 && rate > 0) {
                      const lastRow = tableBody.lastElementChild;
                      if (row === lastRow) {
                        createNewRow();
                      }
                    }
                  });
            
                  // Delete row
                  row.querySelector(".delete-row").addEventListener("click", () => {
                    if (tableBody.rows.length > 1) {
                      row.remove();
                      calculateGrandTotal();
                    }
                  });
                }
            
                // Initial setup
                const initialRow = tableBody.querySelector(".item-row");
                attachEventListeners(initialRow);
              });
            </script>
          </div>
          <%- include ('../partials/footer') %>
        </main>
      </form>
      </div>
    </div>


    
  </body>
</html>
