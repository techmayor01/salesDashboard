<!DOCTYPE html>
<html lang="en">
  <%- include('../partials/head') %>
  <body class="bg-slate-100">
    <div class="relative flex flex-col min-h-screen bg-slate-200">
      <%- include ('../partials/header') %>

      <div class="flex flex-row">
        <div class="lg:w-[220px] lg:p-4">
          <%- include ('../partials/sidebar') %>
        </div>
        <main
          class="relative top-16 p-4 overflow-auto lg:w-[calc(100%-220px)] w-full bg-slate-200">
          <!-- Header -->
          <div class="mb-6">
            <h1 class="text-3xl font-bold text-gray-800">Add Stock</h1>
            <p class="text-sm text-gray-500">Use this form to add a product and its supplier information to the database.</p>
          </div>

          <!-- Form -->
          <form
          action="/addProduct"
          method="post"
          enctype="multipart/form-data"
          class="bg-white rounded-xl shadow p-6 space-y-6">
        
          <!-- Grid Form Fields -->
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Left Column -->
            <div class="space-y-6">
              <!-- Product -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Product <span class="text-red-500">*</span></label>
                <input
                  type="text"
                  name="product"
                  class="w-full border rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="Enter product name" />
              </div>
        
              <!-- Category -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Category <span class="text-red-500">*</span></label>
                <select
                  name="category"
                  class="w-full border rounded-md px-3 py-2 text-sm text-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <option disabled selected>Select Category</option>
                  <% categories.forEach(category => { %>
                    <option value="<%= category._id %>"><%= category.category_name %></option>
                  <% }) %>
                </select>
              </div>
        
              <!-- Warehouse -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Branch</label>
                <select
                  name="branch"
                  class="w-full border rounded-md px-3 py-2 text-sm text-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <option disabled selected>Select Branch</option>
                  <% if (user.role === 'owner') { %>
                    <% branches.forEach(branch => { %>
                      <option value="<%= branch._id %>"><%= branch.branch_name %></option>
                    <% }) %>
                  <% } else { %>
                    <option value="<%= ownerBranch.branch._id %>" selected><%= ownerBranch.branch.branch_name %></option>
                  <% } %>
                </select>
              </div>
            </div>
        
            <!-- Right Column -->
            <div class="space-y-6">
              <!-- Image -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Image <span class="text-red-500">*</span></label>
                <input
                  type="file"
                  name="product_image"
                  class="w-full border rounded-md px-3 py-1 text-sm file:mr-4 file:py-1 file:px-4 file:rounded file:border-0 file:text-sm file:font-semibold file:bg-blue-100 file:text-blue-700 hover:file:bg-blue-200" />
              </div>
        
              <!-- Detail -->
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Detail</label>
                <textarea
                  name="product_detail"
                  rows="3"
                  class="w-full border rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="Maximum 300 characters..."></textarea>
              </div>
        
              <!-- Dates -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Mfg. Date <span class="text-red-500">*</span></label>
                  <input
                    name="mfgDate"
                    type="date"
                    class="w-full border rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Exp. Date <span class="text-red-500">*</span></label>
                  <input
                    name="expDate"
                    type="date"
                    class="w-full border rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
              </div>
            </div>
          </div>
        
          <!-- Table Inputs -->
          <div>
            <h2 class="text-lg font-semibold text-gray-700 mb-2">Inventory & Supplier Info</h2>
            <div class="overflow-x-auto">
              <table id="variantTable" class="w-full text-sm border border-gray-200 rounded-md overflow-hidden">
                <thead class="bg-gray-100 text-gray-700">
                  <tr>
                    <th class="p-2 border border-gray-200">Quantity</th>
                    <th class="p-2 border border-gray-200">Unit Code</th>
                    <th class="p-2 border border-gray-200">Low Stock Alert</th>
                    <th class="p-2 border border-gray-200">Supplier Price</th>
                    <th class="p-2 border border-gray-200">Sell Price</th>
                  </tr>
                </thead>
                <tbody id="variantTableBody">
                  <tr class="text-gray-700 bg-white">
                    <td class="p-2 border border-gray-200"><input type="number" readonly name="quantity[]" placeholder="Quantity" class="w-full border rounded px-2 py-1" /></td>
                    <td class="p-2 border border-gray-200">
                      <select name="unitCode[]" class="w-full border rounded px-2 py-1 text-sm text-gray-700">
                        <option value="">Select Unit</option>
                        <option value="ctns">Ctns</option>
                        <option value="schts">Schts</option>
                        <option value="rolls">Rolls</option>
                        <option value="pkts">Pkts</option>
                        <option value="pcs">Pcs</option>
                        <option value="cs">Cs</option>
                        <option value="dz">Dz</option>
                      </select>
                    </td>
                    <td class="p-2 border border-gray-200"><input type="number" name="lowStockAlert[]" placeholder="Low Stock" class="w-full border rounded px-2 py-1" /></td>
                    <td class="p-2 border border-gray-200"><input type="number" readonly name="supplierPrice" placeholder="Supplier Price" class="w-full border rounded px-2 py-1" /></td>
                    <td class="p-2 border border-gray-200"><input type="number" name="sellPrice[]" placeholder="Sell Price" class="w-full border rounded px-2 py-1" /></td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        
          <!-- Submit -->
          <div style="display: flex; justify-content: space-between; margin-top: 1rem;">
            <button
              type="button"
              onclick="addVariantRow()"
              class="bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-2 rounded-md transition">
              + Add Variant
            </button>
            <button
              type="submit"
              class="bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-2 rounded-md transition">
              + Add Product
            </button>
          </div>
        
          <script>
            function addVariantRow() {
              const tableBody = document.getElementById('variantTableBody');
              const newRow = document.createElement('tr');
              newRow.className = 'text-gray-700 bg-white';
        
              newRow.innerHTML = `
                <td class="p-2 border border-gray-200"><input type="number" name="quantity[]" placeholder="Quantity" class="w-full border rounded px-2 py-1" /></td>
                <td class="p-2 border border-gray-200">
                  <select name="unitCode[]" class="w-full border rounded px-2 py-1 text-sm text-gray-700">
                    <option value="ctns">Ctns</option>
                    <option value="schts">Schts</option>
                    <option value="rolls">Rolls</option>
                    <option value="pkts">Pkts</option>
                    <option value="pcs">Pcs</option>
                    <option value="cs">Cs</option>
                    <option value="dz">Dz</option>
                  </select>
                </td>
                <td class="p-2 border border-gray-200"><input type="number" name="lowStockAlert[]" placeholder="Low Stock" class="w-full border rounded px-2 py-1" /></td>
                <td class="p-2 border border-gray-200"><input type="number" placeholder="Supplier Price" class="w-full border rounded px-2 py-1" disabled /></td>
                <td class="p-2 border border-gray-200"><input type="number" name="sellPrice[]" placeholder="Sell Price" class="w-full border rounded px-2 py-1" /></td>
              `;
        
              tableBody.appendChild(newRow);
            }
          </script>
        
        <script>
          document.addEventListener('DOMContentLoaded', () => {
            const productInput = document.querySelector('input[name="product"]');
            const datalist = document.createElement('datalist');
            datalist.id = 'productOptions';
            productInput.setAttribute('list', 'productOptions');
            document.body.appendChild(datalist);
        
            let debounceTimeout;
            productInput.addEventListener('input', () => {
              clearTimeout(debounceTimeout);
              debounceTimeout = setTimeout(() => {
                const query = productInput.value;
                if (!query) return;
        
                fetch(`/search-product?q=${encodeURIComponent(query)}`)
                  .then(res => res.json())
                  .then(data => {
                    datalist.innerHTML = '';
                    data.forEach(product => {
                      const option = document.createElement('option');
                      option.value = product.product;
                      datalist.appendChild(option);
                    });
                  })
                  .catch(err => console.error('Autocomplete error:', err));
              }, 300);
            });
        
            productInput.addEventListener('change', () => {
              const selected = productInput.value;
              if (!selected) return;
        
              fetch(`/searchProduct-details?name=${encodeURIComponent(selected)}`)
                .then(res => res.json())
                .then(product => {
                  const categorySelect = document.querySelector('select[name="category"]');
                  if (categorySelect && product.category) {
                    categorySelect.value = product.category._id || product.category;
                  }
        
                  if (product.product_detail) document.querySelector('textarea[name="product_detail"]').value = product.product_detail;
                  if (product.mfgDate) document.querySelector('input[name="mfgDate"]').value = product.mfgDate.slice(0, 10);
                  if (product.expDate) document.querySelector('input[name="expDate"]').value = product.expDate.slice(0, 10);
        
                  if (product.variants && product.variants.length > 0) {
                    const first = product.variants[0];
                    const row = document.querySelector('#variantTableBody tr');
                    if (row) {
                      row.querySelector('input[name="quantity[]"]').value = first.quantity || '';
                      row.querySelector('select[name="unitCode[]"]').value = first.unitCode || '';
                      row.querySelector('input[name="lowStockAlert[]"]').value = first.lowStockAlert || '';
                      const supplierInput = row.querySelector('input[name="supplierPrice"]');
                      if (supplierInput) supplierInput.value = first.supplierPrice || '';
                      const sellPriceInput = row.querySelector('input[name="sellPrice[]"]');
                      sellPriceInput.value = first.sellPrice !== undefined && first.sellPrice !== null && first.sellPrice !== '' ? first.sellPrice : 0;
                    }
                  }
                })
                .catch(err => console.error('Error fetching product details:', err));
            });
          });
        </script>
        
        </form>
        
          <%- include ('../partials/footer') %>
        </main>
      </div>
    </div>
  </body>
</html>
